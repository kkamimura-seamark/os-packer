apply from:"./gradle/functions/loadPropertyFile.gradle"
project.loadPropertyFile("./rancheros.properties")

def workDir="${buildDir}"
def binDir="${projectDir}/scripts"
def docker="${binDir}/docker-machine"
def vbox="${binDir}/virtualbox"
def vagr="${binDir}/vagrant"

task clean(){
  doLast {
    cleanSteps("${workDir}","${docker}","${vbox}")
  }
}
task build(){
  doFirst {
  	file("${workDir}").mkdir()
  	file("${workDir}/cache").mkdir()
  	file("${workDir}/output").mkdir()
  }
  doLast {
    createBoxSteps("${workDir}","${docker}","${vbox}","${vagr}")
  }
}
void createBoxSteps(workDir,docker,vbox,vagr){
  exec {
    workingDir "${workDir}"
    executable "${docker}/create.sh"
    args "${rancherVersion}"
  }
  [
  	"${docker}/stop.sh",
  	"${vbox}/create_hd.sh",
  	"${docker}/start.sh",
  	"${docker}/regist_key.sh",
  	"${docker}/stop.sh",
  	"${vbox}/create.sh"  	
  ].each{ sh->
    println "execute [${sh}]"
  	exec {
      workingDir "${workDir}"
      executable "${sh}"
  	}
  }
  exec {
    println "execute [${vagr}/create_box.sh]"
    workingDir "${workDir}"
    executable "${vagr}/create_box.sh"
    args "${rancherVersion}"
  }
}
void cleanSteps(workDir, docker,vbox) {
  if( file("${workDir}").exists() ){
    [
    	"${vbox}/remove.sh",  	
  	  "${docker}/remove.sh"
    ].each{ sh->
      println "execute [${sh}]"
  	  exec {
        workingDir "${workDir}"
        executable "${sh}"
  	  }
    }
  }

}
